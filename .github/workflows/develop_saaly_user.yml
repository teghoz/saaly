# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Saaly User (stage)

on:
  pull_request:
    types: [closed]
    branches:
      - develop
  workflow_dispatch:

jobs:
  dotnetbuild:
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    - name: .NET Saaly Build
      run: dotnet build ./Saaly/
    - name: .NET Saaly Data Test
      run: dotnet test ./Saaly.Data.Tests/
    - name: .NET Saaly Services Test
      run: dotnet test ./Saaly.Services.Tests/
    - name: .NET Saaly User Test
      run: dotnet test ./Saaly.User.Tests/
    
  build:
    runs-on: 'ubuntu-latest'
    needs: dotnetbuild
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: teghoz/saaly-user:develop, teghoz/saaly-user:${{ github.sha }}
        file: ./.github/workflows/saaly.user.Github.Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'STAGE'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: SSH into Ubuntu server and start container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SAALY_SERVER_HOST }}
        username: ${{ secrets.SAALY_SERVER_USERNAME }}
        key: ${{ secrets.SAALY_SERVER_SSH_KEY }}
        port: ${{ secrets.SAALY_SERVER_SSH_PORT }}
        passphrase: ${{ secrets.SAALY_SERVER_SSH_PASSPHRASE }}
        script: |
          cp /etc/nginx/sites-available/site-template /etc/nginx/sites-available/${{secrets.SAALY_USER_DOMAIN}}
          sed -i "s|{{PLACEHOLDER_DOMAIN}}|${{secrets.SAALY_USER_DOMAIN}}|g" /etc/nginx/sites-available/${{secrets.SAALY_USER_DOMAIN}}
          sed -i "s|{{PLACEHOLDER_PORT}}|${{secrets.SAALY_USER_PORT}}|g" /etc/nginx/sites-available/${{secrets.SAALY_USER_DOMAIN}}
          certbot --nginx -d ${{secrets.SAALY_USER_DOMAIN}}
          cp /etc/nginx/sites-available/${{secrets.SAALY_USER_DOMAIN}} /etc/nginx/sites-enabled/${{secrets.SAALY_USER_DOMAIN}}
          docker pull teghoz/saaly-user:develop
          docker stop saaly-user
          docker rm saaly-user
          docker run -d -p ${{secrets.SAALY_PORT}}:8080 --name saaly-user -e ConnectionString=${{ secrets.DATABASE_CONNECTION }} teghoz/saaly-user:develop
          nginx -t
          systemctl reload nginx