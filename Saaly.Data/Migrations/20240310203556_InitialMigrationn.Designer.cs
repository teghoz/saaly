// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Saaly.Data;

#nullable disable

namespace Saaly.Data.Migrations
{
    [DbContext(typeof(SaalyContext))]
    [Migration("20240310203556_InitialMigrationn")]
    partial class InitialMigrationn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FriendlyName")
                        .HasColumnType("text");

                    b.Property<string>("Xml")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tblDataProtectionKeys");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("tblAspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("tblAspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblAspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("tblAspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("tblAspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("tblAspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Saaly.Models.Admin", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ContactGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("DefaultPassword")
                        .HasColumnType("text");

                    b.Property<bool>("DefaultUser")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("ReferralCode")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("ContactGuid");

                    b.ToTable("tblAdmins");
                });

            modelBuilder.Entity("Saaly.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<Guid?>("AdminGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("EntityUserGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("HasLoggedIn")
                        .HasColumnType("boolean");

                    b.Property<bool>("JustInitialized")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("AdminGuid");

                    b.HasIndex("EntityUserGuid");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("tblAspNetUsers", (string)null);
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntity", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<int>("Types")
                        .HasColumnType("integer");

                    b.HasKey("Guid");

                    b.ToTable("tblAuditEntities");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityBillCode", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BillUnitGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EntityBillCodeGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityBillCode");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityBillCodeCurrencyRate", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BillCostRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal>("BillRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityBillCodeCurrencyRateGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityBillCodeGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityCurrencyGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityBillCodeCurrencyRate");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityBillUnit", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EntityBillUnitGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityBillUnit");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityClient", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ContactGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EntityClientBillingInfoGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityClientGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ManagementCompany")
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("ContactGuid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityClient");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityClientBillingInfo", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ContactGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityClientBillingInfoGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityClientGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("ContactGuid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityClientBillingInfo");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityClientGroup", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EntityClientGroupGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<bool>("HasMaximumCapacity")
                        .HasColumnType("boolean");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("MaximumCapacity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityClientGroup");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityClientGroupClient", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ClientGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityClientGroupClientGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.ToTable("tblAuditEntityClientGroupClient");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityCurrency", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityCurrencyGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("FractionalUnit")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("IsoCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityCurrency");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityExpense", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ClientGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityExpenseGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("WorkGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityExpense");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityGender", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EntityGenderGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityGender");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityJob", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityJobGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityJob");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityLocation", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<int>("Depth")
                        .HasColumnType("integer");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityLocationGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MapData")
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ParentGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityLocation");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityProject", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BudgetHours")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ClientGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityProjectGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsChargable")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityProject");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityTask", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AuditFees")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<Guid>("BillUnitGuid")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("BudgetHours")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityTaskGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsChargable")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProjectGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityTasks");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityTaskCurrencyRate", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CurrencyGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityTaskCurrencyRateGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<decimal>("TaskCostRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<Guid>("TaskGuid")
                        .HasColumnType("uuid");

                    b.Property<decimal>("TaskRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityTaskCurrencyRate");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityTimeSheet", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("AssigmentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ClientGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityTimeSheetGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("WorkGuid")
                        .HasColumnType("uuid");

                    b.Property<double>("WorkedHours")
                        .HasColumnType("double precision");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityTimeSheet");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityUser", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BillCodeGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ContactGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DepartmentGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ManagerGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityUser");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityUserDepartment", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserDepartmentGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityUserDepartments");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityUserDepartmentClaim", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserDepartmentClaimGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserDepartmentGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityUserDepartmentClaim");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityUserGroup", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserGroupGuid")
                        .HasColumnType("uuid");

                    b.Property<bool>("HasMaximumCapacity")
                        .HasColumnType("boolean");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("MaximumCapacity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityUserGroup");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityUserGroupUser", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserGroupGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserGroupUserGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityUserGroupUser");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityWorkAssignment", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("AssigmentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("AssignedHours")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityWorkAssignmentGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAssigned")
                        .HasColumnType("boolean");

                    b.Property<Guid>("JobGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblAuditEntityWorkAssignments");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditLocation", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<int>("Depth")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LocationGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("MapData")
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ParentGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.ToTable("tblAuditLocations");
                });

            modelBuilder.Entity("Saaly.Models.Contact", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<Guid?>("EntityLocationGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<Guid?>("GenderGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<Guid?>("LocationGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.Property<string>("WhatsappNumber")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityLocationGuid");

                    b.HasIndex("GenderGuid");

                    b.HasIndex("LocationGuid");

                    b.ToTable("tblContacts");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.Entity", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<int>("Types")
                        .HasColumnType("integer");

                    b.HasKey("Guid");

                    b.ToTable("tblEntities");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityBillCode", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BillUnitGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("BillUnitGuid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblEntityBillCode");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityBillCodeCurrencyRate", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BillCostRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal>("BillRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityBillCodeGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityCurrencyGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("EntityBillCodeGuid");

                    b.HasIndex("EntityCurrencyGuid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblEntityBillCodeCurrencyRate");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityBillUnit", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblEntityBillUnit");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityClient", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ContactGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EntityClientBillingInfoGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ManagementCompany")
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("ContactGuid");

                    b.HasIndex("EntityClientBillingInfoGuid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblEntityClient");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityClientBillingInfo", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ContactGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityClientGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("ContactGuid");

                    b.HasIndex("EntityClientGuid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblEntityClientBillingInfo");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityCurrency", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("FractionalUnit")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("IsoCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblEntityCurrency");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityGender", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblEntityGender");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityJob", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblEntityJob");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityLocation", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<int>("Depth")
                        .HasColumnType("integer");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MapData")
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ParentGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.HasIndex("ParentGuid");

                    b.ToTable("tblEntityLocation");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityProject", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BudgetHours")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<Guid>("ClientGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsChargable")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Guid");

                    b.HasIndex("ClientGuid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblEntityProject");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityTask", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AuditFees")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<Guid>("BillUnitGuid")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("BudgetHours")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsChargable")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProjectGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Guid");

                    b.HasIndex("BillUnitGuid");

                    b.HasIndex("EntityGuid");

                    b.HasIndex("ProjectGuid");

                    b.ToTable("tblEntityTasks");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityTaskCurrencyRate", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CurrencyGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<decimal>("TaskCostRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<Guid>("TaskGuid")
                        .HasColumnType("uuid");

                    b.Property<decimal>("TaskRate")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.HasKey("Guid");

                    b.HasIndex("CurrencyGuid");

                    b.HasIndex("EntityGuid");

                    b.HasIndex("TaskGuid");

                    b.ToTable("tblEntityTaskCurrencyRate");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUser", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BillCodeGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ContactGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DepartmentGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ManagerGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("BillCodeGuid");

                    b.HasIndex("ContactGuid");

                    b.HasIndex("DepartmentGuid");

                    b.HasIndex("EntityGuid");

                    b.HasIndex("ManagerGuid");

                    b.ToTable("tblEntityUser");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUserDepartment", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblEntityUserDepartments");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUserDepartmentClaim", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserDepartmentGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.HasIndex("EntityUserDepartmentGuid");

                    b.ToTable("tblEntityUserDepartmentClaim");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUserGroup", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<bool>("HasMaximumCapacity")
                        .HasColumnType("boolean");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("MaximumCapacity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.ToTable("tblEntityUserGroup");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUserGroupUser", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserGroupGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserGroupUserGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.HasIndex("EntityUserGroupGuid");

                    b.HasIndex("EntityUserGroupUserGuid");

                    b.ToTable("tblEntityUserGroupUser");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityWorkAssignment", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("AssigmentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("AssignedHours")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EntityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityUserGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAssigned")
                        .HasColumnType("boolean");

                    b.Property<Guid>("JobGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Guid");

                    b.HasIndex("EntityGuid");

                    b.HasIndex("EntityUserGuid");

                    b.HasIndex("JobGuid");

                    b.ToTable("tblEntityWorkAssignments");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.Location", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uuid");

                    b.Property<int>("Depth")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MapData")
                        .HasColumnType("text");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ModifiedByUser")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ParentGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.HasIndex("ParentGuid");

                    b.ToTable("tblLocation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Saaly.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Saaly.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Saaly.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Saaly.Models.Admin", b =>
                {
                    b.HasOne("Saaly.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactGuid");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("Saaly.Models.ApplicationUser", b =>
                {
                    b.HasOne("Saaly.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminGuid");

                    b.HasOne("Saaly.Models.EntityModels.EntityUser", "User")
                        .WithMany()
                        .HasForeignKey("EntityUserGuid");

                    b.Navigation("Admin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityBillCode", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityBillCodeCurrencyRate", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityBillUnit", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityClient", b =>
                {
                    b.HasOne("Saaly.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactGuid");

                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityClientBillingInfo", b =>
                {
                    b.HasOne("Saaly.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactGuid");

                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityClientGroup", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityCurrency", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityExpense", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityGender", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityJob", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityLocation", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityProject", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityTask", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityTaskCurrencyRate", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityTimeSheet", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityUser", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityUserDepartment", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityUserDepartmentClaim", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityUserGroup", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityUserGroupUser", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Audits.AuditEntityWorkAssignment", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.Contact", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.EntityLocation", "EntityLocation")
                        .WithMany()
                        .HasForeignKey("EntityLocationGuid");

                    b.HasOne("Saaly.Models.EntityModels.EntityGender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderGuid");

                    b.HasOne("Saaly.Models.EntityModels.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationGuid");

                    b.Navigation("EntityLocation");

                    b.Navigation("Gender");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityBillCode", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.EntityBillUnit", "BillUnit")
                        .WithMany()
                        .HasForeignKey("BillUnitGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillUnit");

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityBillCodeCurrencyRate", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.EntityBillCode", "EntityBillCode")
                        .WithMany("CurrencyRates")
                        .HasForeignKey("EntityBillCodeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.EntityCurrency", "Currency")
                        .WithMany()
                        .HasForeignKey("EntityCurrencyGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Entity");

                    b.Navigation("EntityBillCode");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityBillUnit", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityClient", b =>
                {
                    b.HasOne("Saaly.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactGuid");

                    b.HasOne("Saaly.Models.EntityModels.EntityClientBillingInfo", "EntityClientBillingInfo")
                        .WithMany()
                        .HasForeignKey("EntityClientBillingInfoGuid");

                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Entity");

                    b.Navigation("EntityClientBillingInfo");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityClientBillingInfo", b =>
                {
                    b.HasOne("Saaly.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactGuid");

                    b.HasOne("Saaly.Models.EntityModels.EntityClient", "EntityClient")
                        .WithMany()
                        .HasForeignKey("EntityClientGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Entity");

                    b.Navigation("EntityClient");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityCurrency", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityGender", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityJob", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityLocation", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.Location", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentGuid");

                    b.Navigation("Entity");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityProject", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.EntityClient", "Client")
                        .WithMany()
                        .HasForeignKey("ClientGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityTask", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.EntityBillUnit", "BillUnit")
                        .WithMany()
                        .HasForeignKey("BillUnitGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.EntityProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectGuid");

                    b.Navigation("BillUnit");

                    b.Navigation("Entity");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityTaskCurrencyRate", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.EntityCurrency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.EntityTask", "Task")
                        .WithMany("BillRates")
                        .HasForeignKey("TaskGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Entity");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUser", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.EntityBillCode", "EntityBillCode")
                        .WithMany()
                        .HasForeignKey("BillCodeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactGuid");

                    b.HasOne("Saaly.Models.EntityModels.EntityUserDepartment", "EntityUserDepartment")
                        .WithMany()
                        .HasForeignKey("DepartmentGuid");

                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.EntityUser", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerGuid");

                    b.Navigation("Contact");

                    b.Navigation("Entity");

                    b.Navigation("EntityBillCode");

                    b.Navigation("EntityUserDepartment");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUserDepartment", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUserDepartmentClaim", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.EntityUserDepartment", "EntityUserDepartment")
                        .WithMany("Claims")
                        .HasForeignKey("EntityUserDepartmentGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("EntityUserDepartment");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUserGroup", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUserGroupUser", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.EntityUserGroup", "EntityUserGroup")
                        .WithMany()
                        .HasForeignKey("EntityUserGroupGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.EntityUser", "EntityUser")
                        .WithMany("Groups")
                        .HasForeignKey("EntityUserGroupUserGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("EntityUser");

                    b.Navigation("EntityUserGroup");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityWorkAssignment", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Entity", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.EntityUser", "EntityUser")
                        .WithMany()
                        .HasForeignKey("EntityUserGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Saaly.Models.EntityModels.EntityJob", "EntityJob")
                        .WithMany()
                        .HasForeignKey("JobGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("EntityJob");

                    b.Navigation("EntityUser");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.Location", b =>
                {
                    b.HasOne("Saaly.Models.EntityModels.Location", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentGuid");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityBillCode", b =>
                {
                    b.Navigation("CurrencyRates");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityTask", b =>
                {
                    b.Navigation("BillRates");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUser", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Saaly.Models.EntityModels.EntityUserDepartment", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
